
Que prorroga os sistemas herdados com Design Domain-Driven
uma rápida observação
Nigel P. Weymont, Doutor
e Bruce R. Lombardi, Doutor De
janeiro 2013




Quick Nota: alargar sistemas legados com Design Domain-Driven
Design orientado por domínio de um dos muitos pontos fortes do design Domain-Driven
oferece várias abordagens oportunidade e capacidade de criar novas soluções bem concebidas
para a construção de novos aplicativos que aproveitam que aproveitam os sistemas herdados existentes.As ideias básicas atrás
legacy systemsthis oportunidade foram apresentados por Eric Evans, pai de Domain-Driven Design, na recente Conferência InfoQueue
1realizada em Nova Iorque.
A necessidade de novas aplicações é normalmente conduzido por forças de negócios, tais como produtos novos negócios ou ofertas de mercado e a mudança de necessidades do cliente, ou a necessidade de melhorar o desempenho dos negócios através da redução de custos, melhoria da qualidade ou reduzir os tempos de ciclo.A capacidade de implementar iniciativas de mudança é muitas vezes limitada pelas restrições impostas pela infra-estrutura de TI existente e o custo e a oportunidade de modificar os sistemas existentes.
Modificação de sistemas herdados certamente os sistemas existentes podem ser modificados para suportar novos
para fornecer novos recursos é requisitos, mas esta abordagem sofre muitas vezes um número de
muitas vezes difícil e riskydrawbacks.A capacidade de modificar um sistema herdado pode ser dificultada por uma falta de compreensão do funcionamento interno do sistema antigo e talvez pesado tecnologia e designs quebradiça e implementações que faz alterações arriscado devido a consequências não intencionais. No jargão Design Domain-Driven, sistemas existentes muitas vezes em conformidade com a enorme bola de lama2 padrão.
Modificando um berço (comercial) solução pode também têm muitos inconvenientes, desde modificações personalizadas são muitas vezes difíceis de suporte e atualização como novas versões são implementados pelo fornecedor e as modificações têm de ser aplicadas novamente para o novo sistema.A situação é ainda mais complicada se vários sistemas legados precisam ser alteradas a fim de fornecer os novos recursos que são exigidos.Na realidade, geralmente é tão difícil de
Copyright 2013, JCA Consulting, Inc Todos os direitos reservados.101/21/13




Quick Nota: alargar sistemas legados com Design Domain-Driven
para fazer um bom design de qualquer tipo dentro de sistemas herdados, que a opção para modificar os sistemas herdados é muitas vezes desinteressantes ou mesmo inviável.
Felizmente, Domain-Driven Estratégica Design oferece diversas abordagens para trabalhar com sistemas herdados que oferecem a oportunidade de executar um bom projeto, embora trabalhando dentro das restrições e limitações de legado.
A construção de um novo prédio de aplicação de uma nova aplicação é uma alternativa atraente para um
novo pensar permite número de razões:permite que o domínio a ser abordado a
inovação e as boas e incorporar um novo pensamento designdifferently e perspectivas em vez de usar esses inerentemente incorporado no sistemas legados; permite que a empresa seja mais inovadora desde que eles não são mais limitados pela sistemas legados; e oferece a oportunidade de construir algo que está bem concebido e fora das limitações dos sistemas legados. No entanto existem desafios.O novo aplicativo deve ter seu próprio contexto delimitadas com um modelo de acompanhamento e linguagem onipresente. O mais provável é necessário para extrair dados importantes do sistemas legados bem como fornecer novos dados adicionais para o novo contexto delimitada.
Eric Evans identificou quatro abordagens ou estratégias para o desenvolvimento de novos recursos dentro de uma arquitetura legada.Existem dois componentes subjacentes a cada uma das soluções: um novo contexto para a nova delimitada aplicação, referido como um "bolha", que está fora do sistemas legados; e utilizando o anti-
3camada de corrupção (ACL) padrão para traduzir os dados herdados na língua do novo onipresente delimitada contexto.Cada uma das soluções exige diferentes níveis de esforço e compromisso de
Copyright 2013, JCA Consulting, Inc Todos os direitos reservados.201/21/13




Quick Nota: alargar sistemas legados com Design Domain-Driven
Domain-Driven Design, mas livra correspondentemente diferentes capacidades e graus de sofisticação. Importante, todos eles oferecem a possibilidade de uma nova solução e bem concebido enquanto usando a arquitetura legada.
O contexto é uma bolha a bolha contexto é a forma mais simples de padrão. Um novo
padrão de simples delimitada, usa somente o contexto é definida fora dos sistemas herdados e contém os
dados herdados e requer um compromisso mínimo para o novo domínio modelo.O modelo é preenchido com dados do
Design Domain-Driven sistemas legados usando uma ACL que acessa o sistema herdado e que serve como repositório para o novo domínio.O nível de esforço e compromisso de Domain-Driven Design é baixa, mas a funcionalidade do novo contexto delimitada é também necessariamente limitado porque todos os dados vem de sistemas herdados.
A bolha autónoma o padrão de bolha autónoma elabora sobre o
padrão de bolha usa ambos legacy Contexto e permite que o novo contexto de persistirem delimitada seus próprios
dados e acrescenta o seu próprio domínio de dados específicos bem como interface com os sistemas legados usando uma ACL.
Claramente mais esforço é necessário para implementar esse padrão, mas um modelo de domínio mais capaz é possível.O LCA é, no entanto, finalidade única para o novo contexto delimitada.
Dois modelos são opções que o próximo nível de sofisticação inclui o Open Host Serviços
para abertura do Legacy e sincronizando os padrões de ACL que exponha sistemas legados em um
sistemas em um serviço- wayservice orientada de forma orientada e consequentemente permite que os sistemas herdados para ser acessado por vários, presumidamente novo, delimitada contextos. Uma sincronização de ACL é construído na parte superior do sistema legado e fornece os serviços e dados estruturados em um formulário como JSON, ou possivelmente alguns indústria idioma específico.
Semelhante ao contexto da bolha e autónomas bolha, os dados fornecidos pelos serviços podem ser consumidos directamente on-demand,
Copyright 2013, JCA Consulting, Inc Todos os direitos reservados.301/21/13




Quick Nota: alargar sistemas legados com Design Domain-Driven
ou persistiu no seu próprio repositório de dados para posterior consumo.O nível de sofisticação incorporada nestes padrões, como sincronização entre os sistemas herdados e o novo contexto delimitada, requer consideravelmente mais esforço, mas os serviços estão disponíveis para vários clientes.
O padrão de canal de evento final e mais desafiadoras abordagem é usar um evento
fornece um padrão de canal publicar. Este usa uma publicação-subscrever a
abordagem de design para eventos subscrever para acessar o legado de retençãoque ocorrem dentro de contextos delimitada.eventos em um contexto delimitada são detectados e publicado para outros contextos delimitada que são assinantes.A abordagem é complexa e muitas vezes não é recomendado se a outras abordagens são viáveis.
A expansão de uma nova bolha depois de projetar e implementar um novo aplicativo, cuidado
exige um planeamento cuidado deve ser tomado em consideração o planejamento para a expansão
e a coordenação para assegurar que a ênfase é colocada sobre a bolha.Adicionando informações adicionais no domínio
decorrentes do novo modelo de valor porque ele está disponível deve ser evitado a menos que existe um modelo de domínio
atenciosas compreensão da sua relevância para o novo domínio.
Planos que requerem expansão substancial da ACL e pouco mais novo valor derivado do modelo Domínio, também devem ser evitados, caso contrário um esforço desproporcionado é gasto na ACL, em vez de o modelo de domínio que é onde o valor de negócio é criado. Planos de iteração deve incidir sobre um equilíbrio saudável entre o domínio de adição de valor do trabalho e o foco de trabalho relacionado com a ACL necessários para acessar os sistemas herdados.
Para resumir, novo design Domain-Driven os aplicativos podem ser desenvolvidos para co-existir com aplicativos de legado pelo desenvolvimento de novas aplicações em uma "bolha" que isola o novo contexto da delimitada de sistemas legados.A nova bolha interfaces com o sistema herdado através de diferentes formas de um Anti-
Copyright 2013, JCA Consulting, Inc Todos os direitos reservados.401/21/13




Quick Nota: alargar sistemas legados com
camada de corrupção de Design Domain-Driven. A abordagem oferece a oportunidade de desenvolver novos aplicativos e bem concebidos e uma forma de começar a usar o Design Domain-Driven.Para reprojetar ou refatorar sistemas legados é irrealista e desnecessária, mas para aproveitar o seu valor em novos aplicativos que são necessários para mudanças no negócio, é pragmática e atraente.
Saiba mais sobre Domain-Driven Design para saber mais sobre o design e como nós Domain-Driven pode ajudar você, visite o nosso Web site em www.domaindrivendesigners.com
referências (1)Eric Evans. "Recuperando a capacidade de projetar quando rodeado por confusão de sistemas herdados",QCon Nova Iorque 2012, http://www.infoq.com/presentations/Strategy-Messy-Legacy- sistemas (2)Brian Foote e Joseph Yoder, enorme bola de lama. Quarta Conferência sobre padrões de programas (línguas "PLoP" '97/EuroPLoP '97) Monticello, Illinois, de Setembro de 1997 (3)Evans E. Domain-Driven Design, editora Addison-Wesley, 2004.
Copyright 2013, JCA Consulting, Inc Todos os direitos reservados.501/21/13




Quick Nota: alargar sistemas legados com Design Domain-Driven
sobre nós
sobre a authorsWe fornecer serviços abrangentes de consultoria para projectos quer considerando, planejamento, ou actualmente a implementar soluções de design orientado- domínio ou para os promotores dos projectos que são simplesmente a busca de melhores formas de conceber e implementar uma solução de software.
Nigel Weymont tem mais de 25 anos de experiência em design e desenvolvimento de sistemas de saúde, ciências da vida, Fabricação de Produtos Químicos, processamento de Óleo e Gás, varejo, e mercados financeiros. Sua experiência com design Domain-Driven surgiu durante o desenvolvimento de um grande sistema integrado para o setor de saúde. Ele é agora um entusiasta proponente do Design Domain-Driven.
+1.888.668.5208 Nigel.weymont@domaindrivendesigners.com Bruce Lombardi tem sido conceber e desenvolver sistemas de software para mais de 25 anos e sua experiência com o Domain Design orientado- começou em 2006, enquanto o desenvolvimento de uma grande e complexa aplicação de saúde. Bruce e seus colegas descobriram que as ideias por detrás Domain-Driven Design foram idealmente adequado para conquistar tal complexidade. Ele foi um proponente desde sempre.
+1.888.668.5208 Bruce.lombardi @domaindrivendesigners.com
Copyright 2013, JCA Consulting, Inc Todos os direitos reservados.601/21/13




